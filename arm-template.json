{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Azure region where resources will be deployed."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Globally unique storage account name."
      }
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Function App."
      }
    },
    "functionAppRuntime": {
      "type": "string",
      "defaultValue": "node",
      "allowedValues": [ "node", "python", "dotnet" ],
      "metadata": {
        "description": "Runtime stack for the Function App."
      }
    },
    "functionAppRuntimeVersion": {
      "type": "string",
      "defaultValue": "~4",
      "metadata": {
        "description": "Runtime version for the Function App."
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Cosmos DB account."
      }
    },
    "cosmosDbDatabaseName": {
      "type": "string",
      "defaultValue": "resumeDB",
      "metadata": {
        "description": "Database name in Cosmos DB."
      }
    },
    "cosmosDbContainerName": {
      "type": "string",
      "defaultValue": "VisitorCounter",
      "metadata": {
        "description": "Container name for storing visitor counts."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "resume-service-plan",
      "metadata": {
        "description": "App Service Plan name for the Function App."
      }
    },
    "frontDoorProfileName": {
      "type": "string",
      "defaultValue": "afd-resume-profile",
      "metadata": {
        "description": "Azure Front Door profile name."
      }
    },
    "frontDoorEndpointName": {
      "type": "string",
      "defaultValue": "afd-endpoint-resume",
      "metadata": {
        "description": "Azure Front Door endpoint name."
      }
    },
    "customDomainName": {
      "type": "string",
      "defaultValue": "abidaslam.online",
      "metadata": {
        "description": "Custom domain for your Azure Resume site."
      }
    },
    "staticWebsiteIndexDocument": {
      "type": "string",
      "defaultValue": "index.html",
      "metadata": {
        "description": "Name of the static website index document."
      }
    },
    "staticWebsiteErrorDocument404Path": {
      "type": "string",
      "defaultValue": "404.html",
      "metadata": {
        "description": "Name of the static website 404 error document."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "project": "Azure-Resume",
        "owner": "Abid Aslam",
        "environment": "Production"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": true,
        "publicNetworkAccess": "Enabled",
        "staticWebsite": {
          "enabled": true,
          "indexDocument": "[parameters('staticWebsiteIndexDocument')]",
          "errorDocument404Path": "[parameters('staticWebsiteErrorDocument404Path')]"
        }
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/$web', parameters('storageAccountName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0
          }
        ]
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbDatabaseName')]"
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), parameters('cosmosDbContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbContainerName')]",
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash"
          }
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "properties": {
        "siteConfig": {
          "appSettings": [
            { "name": "FUNCTIONS_WORKER_RUNTIME", "value": "[parameters('functionAppRuntime')]" },
            { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "[parameters('functionAppRuntimeVersion')]" },
            { "name": "AzureWebJobsStorage", "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';EndpointSuffix=core.windows.net')]" },
            { "name": "COSMOS_DB_ACCOUNT", "value": "[parameters('cosmosDbAccountName')]" },
            { "name": "COSMOS_DB_DATABASE", "value": "[parameters('cosmosDbDatabaseName')]" },
            { "name": "COSMOS_DB_CONTAINER", "value": "[parameters('cosmosDbContainerName')]" }
          ]
        },
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2023-05-01",
      "name": "[parameters('frontDoorProfileName')]",
      "location": "global",
      "sku": {
        "name": "Standard_AzureFrontDoor"
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('frontDoorProfileName'), parameters('frontDoorEndpointName'))]",
      "location": "Global",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorProfileName'))]"
      ],
      "properties": {
        "enabledState": "Enabled"
      },
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('frontDoorProfileName'), 'storage-origin-group')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('frontDoorProfileName'))]"
      ],
      "properties": {
        "loadBalancingSettings": {
          "sampleSize": 4,
          "successfulSamplesRequired": 3,
          "additionalLatencyInMilliseconds": 0
        },
        "healthProbeSettings": {
          "probePath": "/",
          "probeRequestType": "GET",
          "probeProtocol": "Https",
          "probeIntervalInSeconds": 120
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups/origins",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', parameters('frontDoorProfileName'), 'storage-origin-group', 'storage-origin')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorProfileName'), 'storage-origin-group')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "hostName": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.web, 'https://', ''), '/', '')]",
        "httpPort": 80,
        "httpsPort": 443,
        "originHostHeader": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.web, 'https://', ''), '/', '')]",
        "priority": 1,
        "weight": 50,
        "enabledState": "Enabled"
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', parameters('frontDoorProfileName'), parameters('frontDoorEndpointName'), 'default-route')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('frontDoorProfileName'), parameters('frontDoorEndpointName'))]",
        "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorProfileName'), 'storage-origin-group')]"
      ],
      "properties": {
        "originGroup": {
          "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', parameters('frontDoorProfileName'), 'storage-origin-group')]"
        },
        "supportedProtocols": [
          "Http",
          "Https"
        ],
        "patternsToMatch": [
          "/*"
        ],
        "forwardingProtocol": "HttpsOnly",
        "linkToDefaultDomain": "Enabled",
        "httpsRedirect": "Enabled"
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[concat('https://', parameters('functionAppName'), '.azurewebsites.net')]"
    },
    "frontDoorEndpoint": {
      "type": "string",
      "value": "[concat('https://', reference(resourceId('Microsoft.Cdn/profiles/afdEndpoints', parameters('frontDoorProfileName'), parameters('frontDoorEndpointName'))).hostName)]"
    },
    "staticWebsiteUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.web]"
    }
  }
}